//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetail", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUser", ReplyAction="http://tempuri.org/IMyService/GetAllUserResponse")]
        MvcApp.ServiceReference1.UserDetail[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUser", ReplyAction="http://tempuri.org/IMyService/GetAllUserResponse")]
        System.Threading.Tasks.Task<MvcApp.ServiceReference1.UserDetail[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        int AddUser(string Name, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(string Name, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        MvcApp.ServiceReference1.UserDetail GetAllUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        System.Threading.Tasks.Task<MvcApp.ServiceReference1.UserDetail> GetAllUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        int UpdateUser(int Id, string Name, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(int Id, string Name, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        int DeleteUserById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : MvcApp.ServiceReference1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<MvcApp.ServiceReference1.IMyService>, MvcApp.ServiceReference1.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MvcApp.ServiceReference1.UserDetail[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<MvcApp.ServiceReference1.UserDetail[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public int AddUser(string Name, string Email) {
            return base.Channel.AddUser(Name, Email);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(string Name, string Email) {
            return base.Channel.AddUserAsync(Name, Email);
        }
        
        public MvcApp.ServiceReference1.UserDetail GetAllUserById(int id) {
            return base.Channel.GetAllUserById(id);
        }
        
        public System.Threading.Tasks.Task<MvcApp.ServiceReference1.UserDetail> GetAllUserByIdAsync(int id) {
            return base.Channel.GetAllUserByIdAsync(id);
        }
        
        public int UpdateUser(int Id, string Name, string Email) {
            return base.Channel.UpdateUser(Id, Name, Email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(int Id, string Name, string Email) {
            return base.Channel.UpdateUserAsync(Id, Name, Email);
        }
        
        public int DeleteUserById(int Id) {
            return base.Channel.DeleteUserById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id) {
            return base.Channel.DeleteUserByIdAsync(Id);
        }
    }
}
